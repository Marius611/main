class Dinglemouse(object):

    def __init__(self, queues, capacity):
        self.queues = [list(x) for x in queues]
        self.capacity = capacity

    def theLift(self):
        stops = [0]
        elevator = []
        person_waiting = True
        
        while person_waiting:    #while people are waiting
            person_waiting = False
            
            # the elevator goes up
            for floor in range(0, len(self.queues)):    #the elevator goes from the ground to the last floor
                stop_at_floor = False
                
                for person in elevator[:]:    
                    if person == floor:    #if the person is at the wanted floor
                        stop_at_floor = True    #the elevator stops
                        elevator.remove(person)    #the person gets out of elevator
                        
                for person in self.queues[floor][:]:
                    if person > floor:    #if there is a person that want to go up
                        stop_at_floor = True    #the elevator stops at the floor
                        if self.capacity > len(elevator):    #if the capacity allows 1 more person
                            elevator.append(person)    #the elevator takes the person
                            self.queues[floor].remove(person)    #so the person is no longer on that floor
                        else:
                            people_waiting = True    #if the elevator is full that means there's at least one person that is wating for the elevator
                
                if stop_at_floor and not stops[-1] == floor:    #if the elevator stoped at this floor
                    stops.append(floor)    #the "stops" list gets the floor where the elevator stopped
                               
                        
                        # the elevator goes down
            for floor in range(len(self.queues) -1, -1, -1):    # the elevator goes from the last floor to the ground range(last floor,ground,step)
                stop_at_floor = False
                
                for person in elevator[:]:    
                    if person == floor:    #if the person is at the wanted floor
                        stop_at_floor = True    #the elevator stops
                        elevator.remove(person)    #the person gets out of elevator
                        
                for person in self.queues[floor][:]:
                    if person < floor:    #if there is a person that want to go down
                        stop_at_floor = True    #the elevator stops at the floor
                        
                        if self.capacity > len(elevator):    #if the capacity allows 1 more person
                            elevator.append(person)    #the elevator takes the person
                            self.queues[floor].remove(person)    #so the person is no longer on that floor
                        else:
                            people_waiting = True    #if the elevator is full that means there's at least one person that is wating for the elevator
                
                if stop_at_floor and not stops[-1] == floor:    #if the elevator stoped at this floor
                    stops.append(floor)    #the "stops" list gets the floor where the elevator stopped
        
        if stops[-1] != 0:
            stops.append(0)
        
        return stops
    
